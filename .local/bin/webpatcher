#!/usr/bin/env node

const path = require('path');
const http = require('http');
const fs = require('fs');

const NODE_PATH = '/usr/lib/node_modules'
const express = require(path.join(NODE_PATH, 'express'));
const cors = require(path.join(NODE_PATH, 'cors'));

let CONFIG_PATH = process.env.XDG_CONFIG_HOME;
CONFIG_PATH = (CONFIG_PATH || path.join(process.env.HOME, '.config'));
CONFIG_PATH = path.join(CONFIG_PATH, path.basename(__filename));

const JS_PATH = path.join(CONFIG_PATH, 'cdn', 'js');
const CSS_PATH = path.join(CONFIG_PATH, 'cdn', 'css');
const ROUTES_PATH = path.join(CONFIG_PATH, 'routes');

fs.mkdir(JS_PATH, { recursive: true }, () => {});
fs.mkdir(CSS_PATH, { recursive: true }, () => {});
fs.mkdir(ROUTES_PATH, { recursive: true }, () => {});

const app = express();

app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cors());
// app.use((_, res, next) => {
//   res.headers["Content-Security-Policy"] = "connect-src 'self'";
//   return next();
// });

app.use(express.static(path.join(CONFIG_PATH, 'cdn')));

fs.readdirSync(ROUTES_PATH).forEach(file => {
  try { app.use(require(path.join(ROUTES_PATH, file))); } catch { }
});

app.get('/api/scripts', (_, res) => {
  fs.readdir(ROUTES_PATH, (_, files) => res.json(files));
});

app.get('/api/resources', (req, res) => {
  const origin = req.get('origin').replace(/https?:\/\//, '');
  const resources = { css: [], js: [] };
  fs.readdir(CSS_PATH, (_, cssFiles) => {
    resources.css = cssFiles.filter(filename =>
      filename.includes(origin) || filename == 'global.css');
    fs.readdir(JS_PATH, (_, jsFiles) => {
      resources.js = jsFiles.filter(filename => filename.includes(origin));
      res.json(resources);
    });
  });
});

app.use((_, res) => res.status(404).end());

http.createServer(app).listen(3000);
