#!/bin/bash

assert-exist() {
  for exe; do
    [ ! -x "$(command -v "$exe")" ] && error "$exe not found in PATH";
  done
  return 0
}

build-prompt() {
  PL_LEFT_HARD=""
  PL_SOFT_EDGE="╱"
  PL_DOWN_EDGE=""
  PROMPT_FG="\033[38;2;118;113;94m"
  PROMPT_BG="\033[48;2;118;113;94m"
  PROMPT_TEXT="\e[37m"
  DEFAULT="\e[0m"

  local prompt="$PROMPT_FG$PL_DOWN_EDGE$PROMPT_BG$PROMPT_TEXT "
  prompt+="$1" && shift
  for segment; do
    prompt+=" $PL_SOFT_EDGE $segment"
  done
  prompt+=" $DEFAULT$PROMPT_FG$PL_LEFT_HARD$DEFAULT "
  echo -e "$prompt"
}

list-windows() {
  for wid in $(xprop -root _NET_CLIENT_LIST_STACKING | sed 's/.*# \|,//g'); do
    printf "%s\t%s\t%s\n" "$wid" \
      "$(xprop -notype -id "$wid" _NET_WM_STATE |
        sed 's/_NET_WM_STATE_\?\|,\| = //g')" \
      "$(xprop -notype -id "$wid" _NET_WM_NAME |
        sed 's/_NET_WM_NAME\|,\| = \|"//g')"
  done | grep -v "STICKY\|SKIP_PAGER"
}

next() {
  assert-exist xdotool
  list-windows | sed 's/\s.*$//; 1q' | xargs -r xdotool windowactivate
}

previous() {
  assert-exist xdotool
  list-windows | tail -2 | sed 's/\s.*$//; 1q' | xargs -r xdotool windowactivate
}

bring-up() {
  true
  # local window_id current_window_id
  # window_id=$1
  # current_window_id=$(xdotool getactivewindow)
  # xdotool windowactivate "$window_id"
  # xdotool windowactivate "$current_window_id"

  # xdotool windowraise "$window_id"
  # xdotool windowraise "$current_window_id"
}

find-and-switch() {
  assert-exist fzf xdotool
  local header
  header="$(build-prompt "Switch Window")"
  list-windows | cut -f 1,3 |
    fzf --header="$header" --with-nth=2.. --bind=tab:down,btab:up \
    --preview="$0 bring-up {1}" --preview-window=':0' |
    cut -f 1 | xargs -r xdotool windowactivate
}

[ $# -ge 1 ] && case "$1" in
  "list-windows"|"next"|"previous"|"bring-up") "$@" && exit;;
esac

find-and-switch
